{"ast":null,"code":"import React from 'react';\nimport { toast } from 'react-hot-toast';\nexport async function Validate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n// validate username\n_c = Validate;\nfunction usernameVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.username) {\n    error.username = toast.error('Username Required');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error(' Invalid Username ');\n  }\n  return error;\n}\nvar _c;\n$RefreshReg$(_c, \"Validate\");","map":{"version":3,"names":["React","toast","Validate","values","errors","usernameVerify","_c","error","arguments","length","undefined","username","includes","$RefreshReg$"],"sources":["C:/React Login App/client/src/helper/Validate.jsx"],"sourcesContent":["import React from 'react'\r\nimport { toast } from 'react-hot-toast'\r\nexport async function Validate(values){\r\n const errors=usernameVerify({},values);\r\n return errors\r\n\r\n}\r\n// validate username\r\nfunction usernameVerify(error={},values) {\r\n    if(!values.username){\r\n        error.username=toast.error('Username Required')\r\n    }else if(values.username.includes(\" \")){\r\n        error.username=toast.error(' Invalid Username ')\r\n\r\n    }\r\n\r\n  return  error;\r\n}\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,iBAAiB;AACvC,OAAO,eAAeC,QAAQA,CAACC,MAAM,EAAC;EACrC,MAAMC,MAAM,GAACC,cAAc,CAAC,CAAC,CAAC,EAACF,MAAM,CAAC;EACtC,OAAOC,MAAM;AAEd;AACA;AAAAE,EAAA,GALsBJ,QAAQ;AAM9B,SAASG,cAAcA,CAAA,EAAkB;EAAA,IAAjBE,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;EAAA,IAACL,MAAM,GAAAK,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnC,IAAG,CAACP,MAAM,CAACQ,QAAQ,EAAC;IAChBJ,KAAK,CAACI,QAAQ,GAACV,KAAK,CAACM,KAAK,CAAC,mBAAmB,CAAC;EACnD,CAAC,MAAK,IAAGJ,MAAM,CAACQ,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAC;IACnCL,KAAK,CAACI,QAAQ,GAACV,KAAK,CAACM,KAAK,CAAC,oBAAoB,CAAC;EAEpD;EAEF,OAAQA,KAAK;AACf;AAAC,IAAAD,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}