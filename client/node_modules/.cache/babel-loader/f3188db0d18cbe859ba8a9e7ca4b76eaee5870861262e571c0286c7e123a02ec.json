{"ast":null,"code":"import React from 'react';\nimport { toast } from 'react-hot-toast';\n// validate login page username\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n// validate username\nfunction usernameVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.username) {\n    error.username = toast.error('Username Required !');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error(' Invalid Username ! ');\n  }\n  return error;\n}\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\n// validate password\nfunction passwordVerify() {\n  let errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required !\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Invalid Password!\");\n  } else if (values.password.length < 4) {\n    errors.password = toast.error(\"Password must be greater then 4 characters\");\n  } else if (!specialChars.test(values.password)) {\n    errors.password = toast.error(\"Password must have special characters\");\n  }\n  return errors;\n}\n\n// reset password\nexport async function resetPasswordValidation(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirmpassword) {\n    errors.exist = toast.error('Password does not Match');\n  }\n  return errors;\n}\n// validate register form\nexport default function registerValidate() {}","map":{"version":3,"names":["React","toast","usernameValidate","values","errors","usernameVerify","error","arguments","length","undefined","username","includes","passwordValidate","passwordVerify","specialChars","password","test","resetPasswordValidation","confirmpassword","exist","registerValidate"],"sources":["C:/React Login App/client/src/helper/Validate.jsx"],"sourcesContent":["import React from 'react'\r\nimport { toast } from 'react-hot-toast'\r\n// validate login page username\r\nexport async function usernameValidate(values){\r\n const errors=usernameVerify({},values);\r\n return errors\r\n\r\n}\r\n// validate username\r\nfunction usernameVerify(error={},values) {\r\n    if(!values.username){\r\n        error.username=toast.error('Username Required !')\r\n    }else if(values.username.includes(\" \")){\r\n        error.username=toast.error(' Invalid Username ! ')\r\n\r\n    }\r\n\r\n  return  error;\r\n}\r\nexport async function passwordValidate(values){\r\n    const errors=passwordVerify({},values)\r\n    return errors;\r\n} \r\n// validate password\r\nfunction passwordVerify(errors={},values){\r\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n    if(!values.password){\r\n        errors.password=toast.error(\"Password Required !\")\r\n\r\n    }else if(values.password.includes(\" \")){\r\n        errors.password=toast.error(\"Invalid Password!\")\r\n    } else if(values.password.length<4){\r\n        errors.password=toast.error(\"Password must be greater then 4 characters\")\r\n    }else if(!specialChars.test(values.password)){\r\n        errors.password=toast.error(\"Password must have special characters\")\r\n\r\n    }\r\n    return errors\r\n}\r\n\r\n// reset password\r\nexport async function resetPasswordValidation(values){\r\n    const errors=passwordVerify({},values);\r\n    if(values.password !== values.confirmpassword){\r\n      errors.exist= toast.error('Password does not Match')  \r\n    }\r\n    return errors\r\n}\r\n// validate register form\r\nexport default function registerValidate(){}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,iBAAiB;AACvC;AACA,OAAO,eAAeC,gBAAgBA,CAACC,MAAM,EAAC;EAC7C,MAAMC,MAAM,GAACC,cAAc,CAAC,CAAC,CAAC,EAACF,MAAM,CAAC;EACtC,OAAOC,MAAM;AAEd;AACA;AACA,SAASC,cAAcA,CAAA,EAAkB;EAAA,IAAjBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;EAAA,IAACJ,MAAM,GAAAI,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnC,IAAG,CAACN,MAAM,CAACO,QAAQ,EAAC;IAChBJ,KAAK,CAACI,QAAQ,GAACT,KAAK,CAACK,KAAK,CAAC,qBAAqB,CAAC;EACrD,CAAC,MAAK,IAAGH,MAAM,CAACO,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAC;IACnCL,KAAK,CAACI,QAAQ,GAACT,KAAK,CAACK,KAAK,CAAC,sBAAsB,CAAC;EAEtD;EAEF,OAAQA,KAAK;AACf;AACA,OAAO,eAAeM,gBAAgBA,CAACT,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAACS,cAAc,CAAC,CAAC,CAAC,EAACV,MAAM,CAAC;EACtC,OAAOC,MAAM;AACjB;AACA;AACA,SAASS,cAAcA,CAAA,EAAkB;EAAA,IAAjBT,MAAM,GAAAG,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;EAAA,IAACJ,MAAM,GAAAI,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpC,MAAMK,YAAY,GAAG,yCAAyC;EAC9D,IAAG,CAACX,MAAM,CAACY,QAAQ,EAAC;IAChBX,MAAM,CAACW,QAAQ,GAACd,KAAK,CAACK,KAAK,CAAC,qBAAqB,CAAC;EAEtD,CAAC,MAAK,IAAGH,MAAM,CAACY,QAAQ,CAACJ,QAAQ,CAAC,GAAG,CAAC,EAAC;IACnCP,MAAM,CAACW,QAAQ,GAACd,KAAK,CAACK,KAAK,CAAC,mBAAmB,CAAC;EACpD,CAAC,MAAM,IAAGH,MAAM,CAACY,QAAQ,CAACP,MAAM,GAAC,CAAC,EAAC;IAC/BJ,MAAM,CAACW,QAAQ,GAACd,KAAK,CAACK,KAAK,CAAC,4CAA4C,CAAC;EAC7E,CAAC,MAAK,IAAG,CAACQ,YAAY,CAACE,IAAI,CAACb,MAAM,CAACY,QAAQ,CAAC,EAAC;IACzCX,MAAM,CAACW,QAAQ,GAACd,KAAK,CAACK,KAAK,CAAC,uCAAuC,CAAC;EAExE;EACA,OAAOF,MAAM;AACjB;;AAEA;AACA,OAAO,eAAea,uBAAuBA,CAACd,MAAM,EAAC;EACjD,MAAMC,MAAM,GAACS,cAAc,CAAC,CAAC,CAAC,EAACV,MAAM,CAAC;EACtC,IAAGA,MAAM,CAACY,QAAQ,KAAKZ,MAAM,CAACe,eAAe,EAAC;IAC5Cd,MAAM,CAACe,KAAK,GAAElB,KAAK,CAACK,KAAK,CAAC,yBAAyB,CAAC;EACtD;EACA,OAAOF,MAAM;AACjB;AACA;AACA,eAAe,SAASgB,gBAAgBA,CAAA,EAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}